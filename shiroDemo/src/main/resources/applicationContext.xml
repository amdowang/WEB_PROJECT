<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd "
	default-lazy-init="true">
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.jst" />
	<bean id="configBean"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>
					classpath*:/application.properties
				</value>
			</list>
		</property>
	</bean>
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="${jdbc.driverClassName}" 
		/> <property name="url" value="${jdbc.url}" /> <property name="username" 
		value="${jdbc.username}" /> <property name="password" value="${jdbc.password}" 
		/> <property name="initialSize" value="2" /> <property name="maxActive" value="20" 
		/> <property name="maxIdle" value="20" /> <property name="maxWait" value="100" 
		/> <property name="validationQuery" value="select 1 from dual" /> <property 
		name="poolPreparedStatements" value="true" /> <property name="defaultAutoCommit" 
		value="false" /> </bean> -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialPoolSize" value="2" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="30" />
		<property name="acquireIncrement" value="5" />
		<property name="maxIdleTime" value="10" />
		<property name="maxStatements" value="0" />
	</bean>

	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName"> <value>hbcDataSource</value> </property> </bean> -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean -->
		<property name="dataSource" ref="dataSource" />

		<!-- <property name="namingStrategy"> <bean class="org.hibernate.cfg.ImprovedNamingStrategy" 
			/> </property> -->

		<property name="hibernateProperties">
			<props>
				<!-- <prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle10gDialect
				</prop> -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> -->
				<!-- <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> -->
			</props>
		</property>

		<!-- <property name="mappingResources"> <list> <value>com/jst/test/model/User.hbm.xml</value> 
			</list> </property> -->
		<!-- <property name="mappingDirectoryLocations"> <list> <value>classpath:/com/jst/myjstBase/model/</value> 
			</list> </property> -->
		<property name="packagesToScan" value="com.jst.shiroDemo.model" />
		<!-- <property name="mappingLocations"> <list> </list> </property> -->
	</bean>
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- aop 切面配置 -->
	<aop:config>
		<aop:pointcut id="allManagerMethod1"
			expression="execution(* com.jst.shiroDemo.service.*.*(..))" /> <!-- 这个包下面所有方法,(..)是指任何参数 -->
		<aop:advisor pointcut-ref="allManagerMethod1" advice-ref="txAdvice" />
	</aop:config>

	<aop:config>
		<aop:pointcut id="allManagerMethod2"
			expression="execution(* com.jst.common.service.*.*(..))" /> <!-- 这个包下面所有方法,(..)是指任何参数 -->
		<aop:advisor pointcut-ref="allManagerMethod2" advice-ref="txAdvice" />
	</aop:config>
	
	<jdbc:initialize-database data-source="dataSource"
		ignore-failures="ALL">
		<jdbc:script location="classpath:sql/mysql/shiroSql.sql"
			encoding="UTF-8" />
	</jdbc:initialize-database>
	<!-- 使用annotation定义事务 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<!-- 基础平台接口调用 -->
</beans>